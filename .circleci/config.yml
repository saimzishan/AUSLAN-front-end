version: 2
jobs:
  build:
    docker:
      - image: docker:1.13.1-git
    working_directory: /var/www/app
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Login to Docker with Curve account
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS  #just use your docker hub username and password
      - run:
          name: Build application Docker image
          command: |
            docker build -t auslan/api:latest .
      - run:
          name: Create Docker container and start server
          command: |
            export container_id=$(docker run -i -t -d --net="host" -v /var/www/app:/usr/src/app auslan/api)
            docker exec -it $container_id /bin/bash -l -c "gem install bundler"
            docker exec -it $container_id /bin/bash -l -c "git clone git@bitbucket.org:curvetomorrow/booking-system-api.git ../booking-system-api"
            docker exec -it $container_id /bin/bash -l -c "cd ../booking-system-api && bundle install"
            docker exec -it $container_id /bin/bash -l -c "service postgresql restart"
            docker exec -it $container_id /bin/bash -l -c "cd ../booking-system-api && bundle exec rake db:migrate"
            docker exec -it $container_id /bin/bash -l -c "cd ../booking-system-api && nohup bundle exec rails s &> output & sleep 1"
            docker exec -it $container_id /bin/bash -l -c "cat ../booking-system-api/output"
            docker exec -it $container_id /bin/bash -l -c "ps -ef"

      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku master
              heroku run rake db:migrate
              heroku restart
            fi